name: CI-CD
on: 
  pull_request:
    branches: master
  push:

env:
  PYTHON_VERSION: "3.10"

jobs:

  docker-build-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_ADRESSE }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/web.dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_ADRESSE }}/clermont-shanka-frontend:latest
            ${{ secrets.DOCKER_ADRESSE }}/clermont-shanka-frontend:${{ github.sha }}


  docker-build-backend:
    runs-on: ubuntu-latest

    steps:   
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_ADRESSE }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend image
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/api.dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_ADRESSE }}/clermont-shanka-backend:latest
            ${{ secrets.DOCKER_ADRESSE }}/clermont-shanka-backend:${{ github.sha }}

  deploy-dev:
    needs: ['docker-build-backend', 'docker-build-frontend']
    uses: ./.github/workflows/deploy.yml
    with:
      environment: dev
    secrets: inherit

  deploy-test:
    needs: ['docker-build-backend', 'docker-build-frontend', 'deploy-dev']
    uses: ./.github/workflows/deploy.yml
    with:
      environment: test
    secrets: inherit

  deploy-prod:
    needs: ['docker-build-backend', 'docker-build-frontend', 'deploy-dev', 'deploy-test']
    uses: ./.github/workflows/deploy.yml
    with:
      environment: prod
    secrets: inherit


  # deploy-dev:
  #   runs-on: ubuntu-latest
  #   needs: ['docker-build-backend', 'docker-build-frontend']

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Set up SSH key
  #       run: |
  #         mkdir -p ~/.ssh
  #         echo "${{ secrets.SSH }}" > ~/.ssh/id_rsa
  #         chmod 600 ~/.ssh/id_rsa
  #         ssh-keyscan -p 62218 dev18.iut.arcanit.io >> ~/.ssh/known_hosts
  #       env:
  #         SSH_PRIVATE_KEY: ${{ secrets.SSH }}

  #     - name: Installer Ansible et la collection Docker
  #       run: |
  #         sudo apt update
  #         sudo apt install -y python3-pip sshpass
  #         pip3 install ansible
  #         ansible-galaxy collection install community.docker

  #     - name: Lancer le playbook Ansible pour dev
  #       env:
  #         image_tag: ${{ github.sha }}
  #         registry_password: ${{ secrets.DOCKER_PASSWORD }}
  #       run: |
  #         cd ansible/
  #         ansible-playbook -i inventory.ini deploy.yml --extra-vars "image_tag=${{ github.sha }} registry_password=${{ secrets.DOCKER_PASSWORD }}"