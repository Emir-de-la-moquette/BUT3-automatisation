name: CI-CD
on: 
  pull_request:
    branches: master
  push:

env:
  PYTHON_VERSION: "3.10"

jobs:
  # lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Set up Python
  #       uses: actions/setup-python@v6
  #       with:
  #         python-version: ${{ env.PYTHON_VERSION }}
  #         cache: "pip"

  #     - name: Install lint dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install pylint flake8

  #     - name: Run pylint
  #       run: pylint --fail-under=8 $(git ls-files '*.py')

  #     - name: Run flake8
  #       run: flake8 .

  # python-build:
  #   runs-on: ubuntu-latest
  #   needs: lint
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Set up Python
  #       uses: actions/setup-python@v6
  #       with:
  #         python-version: ${{ env.PYTHON_VERSION }}
  #         cache: "pip"

  #     - name: Install build tools
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install setuptools wheel build

  #     - name: Build the package
  #       run: python -m build

  #     - name: Upload package artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: python-package
  #         path: dist/

  # unit_test:
  #   runs-on: ubuntu-latest
  #   needs: python-build
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Set up Python
  #       uses: actions/setup-python@v6
  #       with:
  #         python-version: ${{ env.PYTHON_VERSION }}
  #         cache: "pip"

  #     - name: Download package artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: python-package
  #         path: dist/

  #     - name: Install the package
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install dist/*.whl

  #     - name: Install test dependencies
  #       run: pip install pytest pytest-cov

  #     - name: Run unit tests with pytest + coverage
  #       run: |
  #         pytest --cov=greeting --cov-fail-under=90 --cov-report=term-missing --cov-report=html

  #     - name: Upload coverage report
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: coverage-html
  #         path: htmlcov




  docker-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_ADRESSE }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/web.dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_ADRESSE }}/clermont-shanka-frontend:latest
            ${{ secrets.DOCKER_ADRESSE }}/clermont-shanka-frontend:${{ github.sha }}
